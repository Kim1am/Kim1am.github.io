(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{189:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),e("p",[e("code",[t._v("...")]),t._v("扩展运算符")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("Array.from()")]),t._v(" "),e("code",[t._v("Array.from")]),t._v("方法用于将两类对象转为"),e("strong",[t._v("真正")]),t._v("的数组：类似数组的对象"),e("code",[t._v("（array-like object")]),t._v("）和可遍历"),e("code",[t._v("（iterable）")]),t._v("的对象（包括 ES6 新增的数据结构"),e("code",[t._v("Set")]),t._v(" 和 "),e("code",[t._v("Map")]),t._v("）\n  所谓类似数组的对象，本质特征只有一点，即必须有"),e("code",[t._v("length")]),t._v("属性。因此，任何有"),e("code",[t._v("length")]),t._v("属性的对象，都可以通过"),e("code",[t._v("Array.from")]),t._v("方法转为数组，而此时扩展运算符就无法转换。")]),t._v(" "),e("li",[e("code",[t._v("Array.of()")]),t._v(" "),e("code",[t._v("Array.of")]),t._v("方法用于将一组值，转换为数组。\n  "),e("code",[t._v("Array")]),t._v("方法没有参数、一个参数、三个参数时，返回结果都不一样。只有当参数个数不少于 2 个时，"),e("code",[t._v("Array()")]),t._v("才会返回由参数组成的新数组。参数个数只有一个时，实际上是指定数组的长度。")]),t._v(" "),e("li",[e("code",[t._v("copyWithin()")]),t._v(" "),e("code",[t._v("Array.find()")]),t._v(" 和 "),e("code",[t._v("Array.findIndex()")]),t._v("\n  数组实例的"),e("code",[t._v("find")]),t._v("方法，用于找出第一个符合条件的数组成员。它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找出第一个返回值为"),e("code",[t._v("true")]),t._v("的成员，然后返回该成员。如果没有符合条件的成员，则返回"),e("code",[t._v("undefined")]),t._v("。"),e("code",[t._v("find")]),t._v("方法的回调函数可以接受三个参数，依次为当前的值、当前的位置和原数组。\n  数组实例的"),e("code",[t._v("findIndex")]),t._v("方法的用法与"),e("code",[t._v("find")]),t._v("方法非常类似，返回第一个符合条件的数组成员的位置，如果所有成员都不符合条件，则返回-1。\n这两个方法都可以接受第二个参数，用来绑定回调函数的this对象。")]),t._v(" "),e("li",[e("code",[t._v("Array.includes")]),t._v("\n  表示某个数组是否包含给定的值")]),t._v(" "),e("li",[e("code",[t._v("Array. flat()")]),t._v("和"),e("code",[t._v("Array. flatMap()")]),t._v("\n  数组的成员有时还是数组，"),e("code",[t._v("Array.prototype.flat()")]),t._v("用于将嵌套的数组“拉平”，变成一维的数组。该方法返回一个新数组，对原数据没有影响。")]),t._v(" "),e("li",[e("code",[t._v("flat()")]),t._v("默认只会“拉平”一层，如果想要“拉平”多层的嵌套数组，可以将"),e("code",[t._v("flat()")]),t._v("方法的参数写成一个整数，表示想要拉平的层数，默认为1。\n  如果原数组有空位，"),e("code",[t._v("flat()")]),t._v("方法会跳过空位")]),t._v(" "),e("li",[e("code",[t._v("flatMap()")]),t._v("方法对原数组的每个成员执行一个函数（相当于执行"),e("code",[t._v("Array.prototype.map()")]),t._v("），然后对返回值组成的数组执行"),e("code",[t._v("flat()")]),t._v("方法。该方法返回一个新数组，不改变原数组。\n"),e("code",[t._v("flatMap()")]),t._v("只能展开一层数组。")])]),t._v(" "),e("h2",{attrs:{id:"对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),e("p",[e("code",[t._v("Object.assign(target, source)")]),t._v("\n方法用于对象的合并，将源对象"),e("code",[t._v("（source）")]),t._v("的所有可枚举属性，复制到目标对象"),e("code",[t._v("（target）")]),t._v("，方法的第一个参数是目标对象，后面的参数都是源对象。注意，如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。")]),t._v(" "),e("ol",[e("li",[t._v("方法实行的是浅拷贝，而不是深拷贝。也就是说，如果源对象某个属性的值是对象，那么目标对象拷贝得到的是这个对象的引用。")]),t._v(" "),e("li",[t._v("对于嵌套的对象，一旦遇到同名属性，"),e("code",[t._v("Object.assign")]),t._v("的处理方法是替换，而不是添加。")]),t._v(" "),e("li",[t._v("可以用来处理数组，但是会把数组视为对象。")]),t._v(" "),e("li",[t._v("只能进行值的复制，如果要复制的值是一个取值函数，那么将求值后再复制。")])]),t._v(" "),e("h2",{attrs:{id:"遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#遍历","aria-hidden":"true"}},[t._v("#")]),t._v(" 遍历")]),t._v(" "),e("p",[t._v("ES6 一共有 5 种方法可以遍历对象的属性。")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("for...in")]),t._v(" "),e("code",[t._v("for...in")]),t._v("循环遍历对象自身的和继承的可枚举属性（不含"),e("code",[t._v("Symbol")]),t._v(" 属性）。")]),t._v(" "),e("li",[e("code",[t._v("Object.keys(obj)")]),t._v(" "),e("code",[t._v("Object.keys")]),t._v("返回一个数组，包括对象自身的（不含继承的）所有可枚举属性（不含"),e("code",[t._v("Symbol")]),t._v("属性）的键名。")]),t._v(" "),e("li",[e("code",[t._v("Object.getOwnPropertyNames(obj)")]),t._v(" "),e("code",[t._v("Object.getOwnPropertyNames")]),t._v("返回一个数组，包含对象自身的所有属性（不含"),e("code",[t._v("Symbol")]),t._v(" 属性，但是包括不可枚举属性）的键名。")]),t._v(" "),e("li",[e("code",[t._v("Object.getOwnPropertySymbols(obj)")]),t._v(" "),e("code",[t._v("Object.getOwnPropertySymbols")]),t._v("返回一个数组，包含对象自身的所有 "),e("code",[t._v("Symbol")]),t._v(" 属性的键名。")]),t._v(" "),e("li",[e("code",[t._v("Reflect.ownKeys(obj)")]),t._v(" "),e("code",[t._v("Reflect.ownKeys")]),t._v("返回一个数组，包含对象自身的所有键名，不管键名是 "),e("code",[t._v("Symbol")]),t._v(" 或字符串，也不管是否可枚举。\n以上的 5 种方法遍历对象的键名，都遵守同样的属性遍历的次序规则。\n首先遍历所有数值键，按照数值升序排列。\n其次遍历所有字符串键，按照加入时间升序排列。\n最后遍历所有"),e("code",[t._v("Symbol")]),t._v("键，按照加入时间升序排列")])]),t._v(" "),e("h2",{attrs:{id:"symbol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#symbol","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("Symbol")])]),t._v(" "),e("p",[t._v("  一种新的原始数据类型"),e("code",[t._v("Symbol")]),t._v("，表示独一无二的值。它是 "),e("code",[t._v("JavaScript （Object）")]),t._v("。"),e("code",[t._v("Symbol")]),t._v("函数可以接受一个字符串作为参数，表示对 "),e("code",[t._v("Symbol")]),t._v(" 实例的描述，主要是为了在控制台显示，或者转为字符串时，比较容易区分。")]),t._v(" "),e("h2",{attrs:{id:"set数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("set数据结构")])]),t._v(" "),e("p",[t._v("类似于数组，但是成员的值都是唯一的，没有重复的值。\n"),e("code",[t._v("Set.prototype.size")]),t._v("：返回"),e("code",[t._v("Set")]),t._v("实例的成员总数。\n"),e("code",[t._v("add(value)")]),t._v("：添加某个值，返回 "),e("code",[t._v("Set")]),t._v(" 结构本身。\n"),e("code",[t._v("delete(value)")]),t._v("：删除某个值，返回一个布尔值，表示删除是否成功。\n"),e("code",[t._v("has(value)")]),t._v("：返回一个布尔值，表示该值是否为"),e("code",[t._v("Set")]),t._v("的成员。\n"),e("code",[t._v("clear()")]),t._v("：清除所有成员，没有返回值。\n"),e("code",[t._v("Array.from")]),t._v("方法可以将"),e("code",[t._v("Set")]),t._v("结构转为数组。\n"),e("code",[t._v("Set")]),t._v(" 结构的实例有四个遍历方法，可以用于遍历成员。"),e("code",[t._v("Set")]),t._v("的遍历顺序就是插入顺序\n"),e("code",[t._v("keys()")]),t._v("：返回键名的遍历器\n"),e("code",[t._v("values()")]),t._v("：返回键值的遍历器\n"),e("code",[t._v("entries()")]),t._v("：返回键值对的遍历器\n"),e("code",[t._v("forEach()")]),t._v("：使用回调函数遍历每个成员")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// red")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// green")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// blue")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// red")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// green")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// blue")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["red", "red"]')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["green", "green"]')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["blue", "blue"]')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])])])},[],!1,null,null,null);s.default=n.exports}}]);